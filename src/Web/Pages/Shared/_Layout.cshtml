
<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PazarYeri | Çoklu Pazar Platformu</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="~/css/site.css" rel="stylesheet" />

</head>
<body>
    <!-- Navigasyon -->
    <nav id="navbar">
        <div class="container nav-container">
            <a href="#" class="logo">Pazar<span>Yeri</span></a>

            <ul class="nav-links">
                <li><a href="/">Ana Sayfa</a></li>
                <li><a href="/magazalar">Mağazalar</a></li>
                <li><a href="/kategoriler">Kategoriler</a></li>
                <li><a href="/fiyatlandirma">Fiyatlandırma</a></li>
                <li><a href="/blog">Blog</a></li>
            </ul>

            <div class="nav-actions">
                @if (User?.Identity?.IsAuthenticated != true)
                {
                    <a href="/giris" class="btn btn-secondary">Giriş Yap</a>
                    <a href="/magaza-basvurusu" class="btn btn-primary">Ücretsiz Başla</a>
                }
                else if (User.IsInRole("Seller"))
                {
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                            Satıcı Paneli
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="/satici/panel">Dashboard</a></li>
                            <li><a class="dropdown-item" href="/satici/urunler">Ürünlerim</a></li>
                            <li><a class="dropdown-item" href="/satici/siparisler">Siparişler</a></li>
                            <li><a class="dropdown-item" href="/satici/magaza">Mağaza Bilgileri</a></li>
                        </ul>
                    </div>
                    <form method="post" action="/cikis" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-outline-secondary">Çıkış</button>
                    </form>
                }
                else
                {
                    <a href="/hesabim" class="btn btn-secondary">Hesabım</a>
                    <form method="post" action="/cikis" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-outline-secondary">Çıkış</button>
                    </form>
                }
            </div>
        </div>
    </nav>
    <!-- End Navigasyon -->
    @RenderBody()
    <!-- Footer -->
    <footer>
        <div class="container">
            <div class="footer-grid">
                <div class="footer-column">
                    <h3>PazarYeri</h3>
                    <ul class="footer-links">
                        <li><a href="/hakkimizda">Hakkımızda</a></li>
                        <li><a href="/kariyer">Kariyer</a></li>
                        <li><a href="/iletisim">İletişim</a></li>
                        <li><a href="/basin">Basın</a></li>
                    </ul>
                </div>

                <div class="footer-column">
                    <h3>Alıcılar</h3>
                    <ul class="footer-links">
                        <li><a href="/urun-ara">Ürün Ara</a></li>
                        <li><a href="/magazalar">Mağazalar</a></li>
                        <li><a href="/kategoriler">Kategoriler</a></li>
                        <li><a href="/kampanyalar">Kampanyalar</a></li>
                    </ul>
                </div>

                <div class="footer-column">
                    <h3>Satıcılar</h3>
                    <ul class="footer-links">
                        <li><a href="/magaza-basvurusu">Mağaza Aç</a></li>
                        <li><a href="/satici-merkezi">Satıcı Merkezi</a></li>
                        <li><a href="/satis-yap">Satış Yap</a></li>
                        <li><a href="/kargo-cozumleri">Kargo Çözümleri</a></li>
                    </ul>
                </div>

                <div class="footer-column">
                    <h3>Destek</h3>
                    <ul class="footer-links">
                        <li><a href="/yardim-merkezi">Yardım Merkezi</a></li>
                        <li><a href="/topluluk">Topluluk</a></li>
                        <li><a href="/blog">Blog</a></li>
                        <li><a href="/api-dokumantasyonu">API Dökümantasyonu</a></li>
                    </ul>
                </div>
            </div>
            <div class="footer-bottom">
                <p>&copy; 2023 PazarYeri. Tüm hakları saklıdır.</p>
            </div>
        </div>
    </footer>
    <!-- End Footer -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Navbar scroll efekti
            const navbar = document.getElementById('navbar');
            if (navbar) {
                window.addEventListener('scroll', function() {
                    if (window.scrollY > 50) {
                        navbar.classList.add('scrolled');
                    } else {
                        navbar.classList.remove('scrolled');
                    }
                });
            }

            // İstatistik sayma efekti
            const statNumbers = document.querySelectorAll('.stat-number');
            const statsSection = document.querySelector('.hero');

            if (statsSection && statNumbers.length > 0) {
                const options = {
                    root: null,
                    rootMargin: '0px',
                    threshold: 0.5
                };

                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            statNumbers.forEach(stat => {
                                const target = +stat.getAttribute('data-target');
                                const count = +stat.innerText.replace(/[^0-9]/g, '');
                                if (!stat.getAttribute('data-target')) {
                                    stat.setAttribute('data-target', stat.innerText.replace(/[^0-9]/g, ''));
                                    return;
                                }

                                let startTime = null;
                                const duration = 2000;

                                function animateCounter(timestamp) {
                                    if (!startTime) startTime = timestamp;
                                    const progress = Math.min((timestamp - startTime) / duration, 1);

                                    const value = Math.floor(progress * target);
                                    stat.innerText = stat.innerText.replace(/[0-9,]+/, value.toLocaleString());

                                    if (progress < 1) {
                                        requestAnimationFrame(animateCounter);
                                    }
                                }

                                requestAnimationFrame(animateCounter);
                            });

                            observer.unobserve(entry.target);
                        }
                    });
                }, options);

                observer.observe(statsSection);
            }

            // Floating elements mouse move effect
            const floatingElements = document.querySelectorAll('.floating-element');
            if (floatingElements.length > 0) {
                document.addEventListener('mousemove', (e) => {
                    const x = e.clientX / window.innerWidth;
                    const y = e.clientY / window.innerHeight;

                    floatingElements.forEach((element, index) => {
                        const speed = 10 + (index * 5);
                        const xMove = x * speed - (speed / 2);
                        const yMove = y * speed - (speed / 2);

                        element.style.transform = `translate(${xMove}px, ${yMove}px) rotate(${xMove}deg)`;
                    });
                });
            }

            // Mağaza açma formu
            const applicationForm = document.querySelector('.application-form');
            if (applicationForm) {
                applicationForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    alert('Mağaza başvurunuz alınmıştır. En kısa sürede sizinle iletişime geçilecektir.');
                });
            }

            // Scroll animasyonları
            const animatedElements = document.querySelectorAll('.section-title, .section-subtitle, .feature-card, .store-card, .step, .application-form, .testimonial-card, .cta-title, .cta-subtitle, .cta-buttons');

            if (animatedElements.length > 0) {
                const animationObserver = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            entry.target.style.opacity = '1';
                            entry.target.style.transform = 'translateY(0)';
                            animationObserver.unobserve(entry.target);
                        }
                    });
                }, { threshold: 0.1 });

                animatedElements.forEach(element => {
                    animationObserver.observe(element);
                });
            }

            // CTA buton etkileşimi
            const ctaButtons = document.querySelectorAll('.cta-buttons .btn');
            ctaButtons.forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const buttonText = this.textContent;
                    if (buttonText.includes('Ücretsiz Deneyin')) {
                        alert('14 günlük ücretsiz deneme sürümüne yönlendiriliyorsunuz...');
                    } else {
                        alert('Daha fazla bilgi için iletişim sayfasına yönlendiriliyorsunuz...');
                    }
                });
            });
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
